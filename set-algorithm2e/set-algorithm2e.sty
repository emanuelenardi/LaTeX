% TODO: https://it.overleaf.com/learn/latex/Writing_your_own_package
% \RequirePackage{algorithm2e}

% NOTE Le seguenti domande hanno influenzato le impostazioni
% https://tex.stackexchange.com/questions/345737/

\usepackage{comment} % debugging
% NOTE impostazioni della stampa degli algoritmi
\usepackage[
	% ,linesnumbered
	% ,plain% default
	,ruled
	% ,tworuled
	% ,noline% default
	,vlined
	% ,italiano
	% ,onelanguage
	,algosection % default
	% ,algo2e % per compatibilità con 'algorithm' TODO ambiente algorithm -> algorithm2e
]{algorithm2e}
\DontPrintSemicolon
\LinesNotNumbered

% NOTE inclusione delle immagini esplicative negli algoritmi
\newif\ifFigureOfAlgo
\FigureOfAlgotrue% stampa l'immagine
% NOTE ottimizzare la versione stampata in bianco e nero
\newif\ifAlgoPrinted
% TODO rimuovere condizionalmente i commenti dagli algoritmi
% IDEA ridefinire i comandi vuoti?
\newif\ifAlgoNotCommented
% \AlgoNotCommentedtrue

% NOTE commenti
\ifAlgoPrinted
\newcommand\commentFont[1]{\footnotesize\ttfamily\textcolor{lightgray}{#1}}
\else
\newcommand\commentFont[1]{\footnotesize\ttfamily\textcolor{blue}{#1}}
\fi

% https://tex.stackexchange.com/questions/210161/
% NOTE cabiare lo stile dell'algoritmo nel testo
\makeatletter
\newcommand{\algorithmstyle}[1]{%
	\renewcommand{\algocf@style}{#1}%
}
\makeatother

% \begin{comment}
\usepackage{booktabs}
% NOTE se crea problemi nell'impaginazione degli algoritmi rimuovere senza pietà alcuna
% https://tex.stackexchange.com/questions/345737/
\makeatletter
\newcommand\fs@booktabsruled{%
	\def\@fs@cfont{\bfseries\strut}\let\@fs@capt\floatc@ruled
	\def\@fs@pre{\hrule height\heavyrulewidth depth0pt \kern\belowrulesep}%
	\def\@fs@mid{\kern\aboverulesep\hrule height\lightrulewidth\kern\belowrulesep}%
	\def\@fs@post{\kern\aboverulesep\hrule height\heavyrulewidth\relax}%
	\let\@fs@iftopcapt\iftrue
	% NOTE aggiunto dal codice sorgente di algorithm2e
	\let\@mathsemicolon=\;\def\;{\ifmmode\@mathsemicolon\else\@endalgoln\fi}%
}
\makeatother

% NOTE senza questo if condizionale succedono disastri
% NOTE -> i file standalone non compilano
\newif\ifstandalone
\ifstandalone\else
\usepackage{float}
\newfloat{algorithm}{h}{alg}[section]
\floatname{algorithm}{Algoritmo}

\floatstyle{booktabsruled}
\restylefloat{algorithm}
\fi
% \end{comment}

% NOTE correzione temporanea per sovrascrittura dell'ambiente 'algorithm'
% NOTE l'errore risiede nel codice soprastante
% \NewDocumentCommand{\InputAlgo}{m}{%
% 	\renewcommand{\;}{\par}% intepreta il '\;' come fine riga
% 	\FigureOfAlgotrue% prints explanatory image
% 	\input{#1}% TeX command
% 	\FigureOfAlgofalse% reset setting
% 	\renewcommand{\;}{\mskip\thickmuskip}% p.357 of TeXbook
% }

% https://tex.stackexchange.com/questions/153646/algorithm2e-disabling-line-numbers-for-specific-lines
% NOTE Disabling line numbers for specific lines with 'linesnumbered' option on
\let\oldnl\nl% Store \nl in \oldnl
\newcommand{\nonl}{%
	\renewcommand{\nl}{\let\nl\oldnl}%
}% Remove line number for one line

% \SetKwProg{keyword}{prima}{dopo}{fine}
\SetKwProg{prototype}{}{}{}
\SetKwProg{function}{Funzione}{}{}
\SetKwProg{procedure}{Procedura}{}{}

% NOTE didascalie ed Elenco degli algoritmi
\SetAlgorithmName{Algoritmo}{algoritmo}{Elenco degli algoritmi}
\SetAlgoProcName{Procedura}{procedura}
\SetAlgoFuncName{Funzione}{funzione}
% \SetAlgorithmName{}{Algoritmo}{Elenco degli algoritmi}
% \SetAlgoProcName{}{Procedura}
% \SetAlgoFuncName{}{Funzione}

% NOTE spaziatura nel testo
% default: smallskip
\SetAlgoSkip{smallskip}
% \SetAlgoSkip{medskip}
% \SetAlgoSkip{bigskip}

% NOTE indentazione
% \SetInd{0.5em}{1em}% <- stile compatto
\SetInd{0.25em}{2em}

% NOTE didascalia
\SetAlCapSkip{15ex}
% \SetAlgoCaptionSeparator{ --}
\SetAlgoCaptionSeparator{:}
% \SetAlgoCaptionSeparator{}
% \SetAlgoRefName{}

% NOTE stile etichette
\SetNlSty{texttt}{(}{)}
% \SetAlgoNlRelativeSize{0}
\SetNlSkip{.5em}

% NOTE definizioni di inizio e fine blocco
% \SetStartEndCondition{ (}{) }{}% c-like
\SetStartEndCondition{ }{ }{}
% \AlgoDisplayBlockMarkers\SetAlgoBlockMarkers{\{}{\}}%
% \AlgoDisplayBlockMarkers\SetAlgoBlockMarkers{begin}{end}%

% NOTE ridefinizione sei comandi in inglese
\SetKwInput{KwIng}{Ingresso}
\SetKwInput{KwData}{Dati}
\SetKwInput{KwUsc}{Uscita}
\SetKwInput{KwResult}{Risultato}

% NOTE parole chiave definite direttamente in italiano
\SetKwInput{Ingresso}{Ingresso}
\SetKwInput{Dati}{Dati}
\SetKwInput{Uscita}{Uscita}
\SetKwInput{Risultato}{Risultato}
\SetKwInput{DataStructures}{\footnotesize{\fbox{Strutture dati}}}

% NOTE ridefinizione comandi italiani

% NOTE abilita opzione 'longend', 'shortend' è dafault
% \SetKwIF{Sea}{AltSe}{Altrimenti}
%     	{se}{allora}{altrimenti se}{altrimenti}{fine\ se}% <- mancava 'se'
%
% \SetKwFor{Finche}{finché}{fai}{fine\ finché}% <- mancava 'finché'

\SetKwInOut{Input}{\small{Input}}
\SetKwInOut{Output}{\small{Output}}
% NOTE ridefinizione comandi per dispense LFC
% \SetKwInOut{Input}{\footnotesize{\fbox{input}}}
% \SetKwInOut{Output}{\footnotesize{\fbox{output}}}

% WARNING comandi già specificati nei pacchetti matematici
% \NewDocumentCommand\Let{mm}{#1 \textleftarrow #2}
% \newcommand\Tau{\mathcal{T}}

% NOTE Linguaggi Formali e Compilatori
\SetKw{Break}{break}
\SetKw{Continue}{continue}
\SetKw{Init}{init}
\SetKw{Push}{push}
\SetKw{Pop}{pop}
\SetKw{Set}{set}
\SetKw{Marca}{marca}
\SetKw{Flag}{flag}
\SetKw{Add}{add}

% \SetKwProg{Fn}{}{\string:}{}
\SetKwFunction{Closure}{closure}

\usepackage{xspace}
\providecommand{\myyes}{\textcolor{ForestGreen}{\textbf{yes}}\xspace}
\providecommand{\myno}{\textcolor{red}{\textbf{no}}\xspace}

\SetKw{Print}{stampa}

% NOTE cicli
% WARNING fa attenzione lasca degli spazi dalla definizione delle keyword, pena errori incorreggibili
% \SetKwFor{From}{da}{fai}
\SetKwFor{From}{from}{do}

% \SetKw{DownTo}{fino a}
\SetKw{DownTo}{until}

% \SetKw{Step}{con passo}
\SetKw{Step}{with step}

% NOTE logica booleana - boolean logic
\SetKw{True}{true}
\SetKw{False}{false}
\SetKw{And}{and}
\SetKw{Or}{or}
\SetKw{Not}{not}
\SetKw{To}{a}

% NOTE Algoritmi e Strutture Dati

% NOTE utilizzato nel testo
\newcommand\alert[1]{\textcolor{Blue}{#1}}
% NOTE mi assicura la compatibilità quando copio testo dalle slide
\newcommand\blink[1]{\textcolor{rose}{#1}}

% NOTE quando ometto del codice scritto in precedenza
\newcommand\omitted{\([\ldots]\)}

% NOTE definizione stili
\SetFuncSty{textsf}
\SetArgSty{upright}
\SetDataSty{textsc}
% \SetKwSty{}

% NOTE tipi
\SetKw{Int}{int}
\SetKw{Real}{float}
\SetKw{Bool}{bool}

% NOTE Strutture Dati
\SetKwData{fifo}{fifo}
\SetKwData{lifo}{lifo}

% NOTE funzioni ausiliarie
% TODO ho usato maxFunction, da cambiare
\SetKwFunction{MathMax}{max}
\SetKwFunction{MathMin}{min}
% NOTE vedi comandi
\SetKwFunction{iif}{iif}

\SetKwFunction{Swap}{swap}
% NOTE dove l'ho utilizzato?
\newcommand\sSwap[2]{\ensuremath{#1 \leftrightarrow #2}}

% NB Font
% \newcommand{\fontproc}[1]{\textsf{{\small #1}}}
\newcommand{\fonttype}[1]{\textsc{#1}\xspace}
\newcommand{\fontvar}[1]{\textit{#1}\xspace}

% NOTE variabili in comune
\newcommand\Max{\fontvar{max}} % variables, use \max for the math function
\newcommand\Min{\fontvar{min}} % variables, use \min for the math function
\newcommand\In{\fontvar{in}}
\newcommand\Out{\fontvar{out}}
\newcommand\Temp{\fontvar{temp}}
\newcommand\Item{\fonttype{Item}}
\newcommand{\priority}{\fontvar{priority}}

% NOTE valori
\SetKw{This}{this}
\SetKw{Self}{self}
\SetKw{Delete}{delete}
\SetKw{Nil}{nil}
\SetKw{Null}{null}
\SetKw{Choice}{scelta}
\SetKw{Sucess}{successo}
\SetKw{Failure}{fallimento}

% NOTE keyword
\SetKwInput{precondition}{precondition}
\SetKwFunction{new}{new}
\SetKwFunction{delete}{delete}

% NOTE stile definito all'inizio
\SetCommentSty{commentFont}
% \newcommand\mycommfont[1]{\rmfamily\textcolor{blue}{#1}}
% \SetCommentSty{mycommfont}
% NOTE \SetKwComment{<cmd>}{<before>}{<after>}
\SetKwComment{Comment}{//~}{}
% NOTE serve per l'introduzione, dove si calcola la complessità
\SetKwComment{Rem}{}{}
% \newcommand{\REMF}[1]{\Comment*[f]{#1}}
% \newcommand{\REMR}[1]{\Comment*[r]{#1}}

% NOTE definizione di una keyword di tipo vettore dove:
% #1 - tipo di dato contenuto nell'array
% #2 - valore 0-esimo o estremo sinisto
% #3 - valore 0-esimo o estremo destro
% OPTIMIZE: \SetKwArray{Array}{array}
% TODO non utilizzare 'g' come parametro, sostituirlo con 'o'
\NewDocumentCommand\Array{moo}{%
	\ensuremath{%
	\KwSty{#1}% <- spazio
		\IfNoValueTF{#2}{%
			[\,]% <- inizialmente vuoto
		}{%
		\IfNoValueTF{#3}{%
			[#2]% <- valore iniziale
		}{%
			[#2\dots#3]% <- intervallo
		}}}%
	\xspace%
}

% NOTE definizione di una keyword di tipo matrice dove:
% #1: tipo di dato contenuto nella matrice
% #2: se non viene specificato viene stampata la matrice '#1[][]'
% #3: se viene specificato viene stampata la matrice '#1[#2][#3]'
\NewDocumentCommand\Matrix{mO{}O{}}{%
	\ensuremath{%
	\KwSty{#1}% <- spazio
		\IfNoValueTF{#2}{%
			[\,][\,]% <- inizialmente vuoto
		}{%
		\IfValueT{#3}{%
			[#2][#3]% <- valori iniziali
		}}}%
	\xspace%
}

\DeclareMathOperator*\Equal{==}
\newcommand\Assign{\ensuremath{\gets}\xspace}% =
\DeclareMathOperator*\Neq{\neq}% !=

% TODO migliorare la resa tipografica, seimboli troppo vicini
\newcommand\Increment[1]{%
	\ensuremath{#1}\texttt{++}%
}
\newcommand\Decrement[1]{%
	\ensuremath{#1}\texttt{++}%
}
\newcommand\Multiply[2]{%
	\ensuremath{#1 *= #2}%
}
% https://tex.stackexchange.com/questions/67912/
\newcommand\AddTo[2]{%
	\ensuremath{#1\, + \mkern-6mu = #2}%
}
\newcommand\RemoveFrom[2]{%
	\ensuremath{#1\, -= #2}%
}

% TODO da rimuovere, non semantico
% \colorlet{algAccentColor}{blue}
% \newcommand\accentColor[1]{\textcolor{algAccentColor}{#1}}

% NOTE per rappresentazione computazioni costi nell'Introduzione
\NewDocumentCommand{\costo}{ s m O{} O{} }{%
	\IfBooleanTF{#1}{%
		% NOTE comando per la riga di intestazione
		\Rem*[f]{%
			\makebox[15mm][c]{#2}% costo
			\makebox[15mm][c]{#3}% # Volte / caso migliore
			\makebox[15mm][c]{#4}% #         caso pessimo
		}%
	}{%
		% NOTE comando per descrivere i costi
		\Rem*[f]{%
			\makebox[15mm][c]{\(#2\)}% costo
			\makebox[15mm][c]{\(#3\)}% caso migliore
			\makebox[15mm][c]{#4}%     caso pessimo
		}%
	}%
}
